name: Weekly 10x Release

on:
  schedule:
    - cron: "0 8 * * 6"  # Runs at 8 AM UTC every Saturday

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Git
        run: |
          git config --global user.name "Pooyan Razian"
          git config --global user.email "prazian@gmail.com"

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Get latest release tag
        id: get_latest
        run: |
          LATEST_TAG=$(git tag --sort=-v:refname | grep '^v1\.' | head -n 1 || true)
          echo "Latest tag: $LATEST_TAG"
          if [ -z "$LATEST_TAG" ]; then
            TAG="v1.0.0"
          else
            TAG="$LATEST_TAG"
          fi
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"

      - name: Generate next tag
        id: next_tag
        run: |
          OLD_TAG="${{ steps.get_latest.outputs.tag }}"
          echo "Previous tag: $OLD_TAG"
          TAG_NO_V=${OLD_TAG#v}
          # Extract parts and default to zero if missing
          MAJOR=$(echo "$TAG_NO_V" | cut -d. -f1)
          MINOR=$(echo "$TAG_NO_V" | cut -d. -f2)
          PATCH=$(echo "$TAG_NO_V" | cut -d. -f3)
          # Safety fallback in case anything is empty
          MAJOR=${MAJOR:-1}
          MINOR=${MINOR:-0}
          PATCH=${PATCH:-0}
          echo "Parsed version: MAJOR=$MAJOR, MINOR=$MINOR, PATCH=$PATCH"
          # Randomly choose to increment MINOR or PATCH
          if (( RANDOM % 2 )); then
            MINOR=$((MINOR + 1))
            PATCH=0
          else
            PATCH=$((PATCH + 1))
          fi

          NEW_TAG="v${MAJOR}.${MINOR}.${PATCH}"
          echo "New tag: $NEW_TAG"
          echo "tag=$NEW_TAG" >> $GITHUB_OUTPUT

      - name: Create a new release
        run: |
          gh release create "${{ steps.next_tag.outputs.tag }}" \
            --title "Release ${{ steps.next_tag.outputs.tag }}" \
            --notes "Some 10x code Ninja get shit done release" \
            --generate-notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
